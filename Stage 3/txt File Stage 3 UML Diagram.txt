UML Diagram Explanation – Food Delivery System

In this stage, our group designed the UML diagram for a Food Delivery System.
The goal was to show how all the classes in our project work together, including their attributes, methods, and relationships. We focused on making sure each class had a clear purpose and included the actions (methods) it can perform.

System Overview: The system lets customers browse restaurants, view menus, place orders, make payments, and leave reviews. Restaurants can manage their menu items and view customer feedback. Delivery personnel handle deliveries, while the admin oversees everything in the system.


-User (Superclass): The User class is the parent of all user types — it includes shared attributes like userID, name, email, and password.
Every user can log in, log out, and update their profile. This helps keep common functionality in one place and reduces code duplication.

-Customer (Subclass of User): The Customer class inherits from User and adds customer-specific features like address, phoneNumber, and a Cart.
Customers can browse menus, add items to their cart, place orders, and write reviews. Each customer is connected to multiple Orders and Reviews.

-Admin (Subclass of User): The Admin class also inherits from User. Its main job is to manage the platform.
Admins can add or remove restaurants and view reports. They don’t directly interact with orders or menus but ensure the system runs smoothly.

-DeliveryPerson (Subclass of User): Delivery people handle delivering orders. They have an availabilityStatus and can accept orders, update delivery status, and mark orders as delivered. Each delivery person is linked to the Order they are currently handling.

-Restaurant: The Restaurant class includes the restaurant’s name, address, phone, menu, and reviews.
A restaurant can add or remove menu items, view orders, and calculate its average rating.
It connects to many MenuItem, Review, and Order objects.

-MenuItem: The MenuItem class represents food items. Each item has an itemID, name, description, and price.
It includes methods to update its price and display its details.

-Cart: The Cart class stores the list of MenuItem objects that the customer wants to order.
It can add or remove items, calculate the total, and clear itself after checkout.
Each customer has one cart at a time.

-Order: The Order class links the customer, restaurant, menu items, payment, and delivery person.
It has attributes like orderID, totalAmount, and status.
Orders can be placed, updated, and assigned to delivery personnel.
This class is the center of the system because it connects the customer, restaurant, and delivery person.

-Payment: The Payment class handles the financial part of an order.
It stores the amount, method, and paymentStatus, and includes methods to process payments or refund them.
Each order is connected to exactly one payment.

-Review: The Review class allows customers to rate and comment on their restaurant experience.
Each review links to both the Customer and the Restaurant.
It includes methods to display reviews and help restaurants maintain reputation scores.



Flow of the System
-User logs in (either customer, admin, or delivery person).
-A Customer browses restaurants and their MenuItems.
-The customer adds items to the Cart and places an Order.
-The Order is sent to the Restaurant and assigned to a DeliveryPerson.
-The Payment is processed for the order.
-After delivery, the Customer can leave a Review for the Restaurant.
-The Admin monitors restaurants, reviews, and overall system activity.


Improvements from Previous Stage: Based on feedback, this version of the UML

-Added methods to every class so it shows how actions happen in the system.
-Fixed relationships between classes.
-Introduced a User superclass to reduce redundancy.
-Clarified that Order connects properly to Payment, Restaurant, and DeliveryPerson.
-Reduced clutter by giving each class one clear responsibility.